#!/usr/bin/env python
from dynamic_reconfigure.parameter_generator_catkin import *
from enum import Enum
PACKAGE = "bobi_control"

RobotDefaults = Enum('RobotDefaults', 'Fishbot FishbotV4 Thymio Demo')
robot = RobotDefaults.Fishbot


class Defaults:
    def __init__(self, type: RobotDefaults):
        self._type = type

    def __call__(self) -> ParameterGenerator:
        gen = ParameterGenerator()

        gen.add("reset_current_pose",   bool_t,   0, "",  False)

        gen.add("radius",    double_t,    0, "", 0.22,  0.0, 100.0)
        gen.add("alpha_w",    double_t,    0, "", 0.6,  0.0, 1.0)

        gen.add("use_closest_individual",   bool_t,   0, "",  False)
        gen.add("perceived_agents",    int_t,    0, "", 1,  0, 30)
        gen.add("gamma_rand",    double_t,    0, "", 0.1,  0.0, 1.0)
        gen.add("gamma_wall",    double_t,    0, "", 0.23,  0.0, 1.0)
        gen.add("gamma_sym",    double_t,    0, "", 0.0,  0.0, 1.0)
        gen.add("gamma_asym",    double_t,    0, "", 0.0,  0.0, 1.0)
        
        gen.add("dw",    double_t,    0, "", 6.0,  0.0, 20.0)
        gen.add("dc",    double_t,    0, "", 1.0,  0.0, 20.0)
        gen.add("gamma_attraction",    double_t,    0, "", 0.5,  0.0, 1.0)
        gen.add("gamma_alignment",    double_t,    0, "", 0.3,  0.0, 1.0)
        
        gen.add("vmean",    double_t,    0, "", 11.0,  0.0, 50.0)
        gen.add("vmin",    double_t,    0, "", 3.0,  0.0, 50.0)
        gen.add("coeff_peak_v",    double_t,    0, "", 1.0,  0.0, 50.0)
        gen.add("vmem",    double_t,    0, "", 0.85,  0.0, 1.0)
        gen.add("vmem12",    double_t,    0, "", 0.6,  0.0, 1.0)
        gen.add("vcut",    double_t,    0, "", 25.0,  0.0, 50.0)
        
        gen.add("taumean",    double_t,    0, "", 0.52,  0.0, 2.0)
        gen.add("taumin",    double_t,    0, "", 0.2,  0.0, 2.0)
        gen.add("tau0",    double_t,    0, "", 0.8,  0.0, 2.0)

        gen.add("itermax",    int_t,    0, "", 50,  0, 200)

        return gen


gen = Defaults(robot)()
exit(gen.generate(PACKAGE, "burst_and_coast_node", "BurstAndCoast"))
