#!/usr/bin/env python
PACKAGE = "bobi_control"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("Kp_v",    double_t,    0, "Proportional gain for linear velocity", 0.05,  0.0, 100.0)
gen.add("Kp_w",    double_t,    0, "Proportional gain for angular velocity", 0.05,  0.0, 100.0)
gen.add("Ki_v",    double_t,    0, "Integral gain for linear velocity", 0.0,  0.0, 100.0)
gen.add("Ki_w",    double_t,    0, "Integral gain for angular velocity", 0.0,  0.0, 100.0)
gen.add("Kd_v",    double_t,    0, "Derivative gain for linear velocity", 0.005,  0.0, 100.0)
gen.add("Kd_w",    double_t,    0, "Derivative gain for angular velocity", 0.002,  0.0, 100.0)

gen.add("ub_v",    double_t,    0, "Linear velocity upper bound (m/s)", 0.40,  0.0, 0.60)
gen.add("ub_w",    double_t,    0, "Angular velocity upper bound (m/s)", 9.0,  0.0, 10.0)
gen.add("lb_v",    double_t,    0, "Linear velocity lower bound (m/s)", 0.0,  -0.60, 0)
gen.add("lb_w",    double_t,    0, "Angular velocity lower bound (m/s)", -9.0,  -10.0, 0)

gen.add("scaler_v",    double_t,    0, "Scaling coefficient for the linear velocity PID", 1.0,  0.00001, 100)
gen.add("scaler_w",    double_t,    0, "Scaling coefficient for the right angular velocity PID", 1.0,  0.00001, 100)

gen.add("distance_threshold",    double_t,    0, "Distance threshold", 0.005,  0.00001, 100)
gen.add("rotate_in_place_threshold",    double_t,    0, "Threshold below which the robot should", 1.0,  0.0, 3.14)

gen.add("verbose",   bool_t,   0, "Verbose",  True)

exit(gen.generate(PACKAGE, "position_controller_node", "PositionControl"))